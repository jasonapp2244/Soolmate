import java.util.Properties
import java.io.FileInputStream

plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
    id "com.google.gms.google-services"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode') ?: '1'
def flutterVersionName = localProperties.getProperty('flutter.versionName') ?: '1.0'

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file("key.properties")
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    compileSdk 35

    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = '17'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "com.craftech.soolmate"
        minSdkVersion 24
        targetSdkVersion 35
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled true

        ndk {
            abiFilters 'armeabi-v7a', 'arm64-v8a'
        }
    }

    signingConfigs {
        release {
            keyAlias = keystoreProperties["keyAlias"]
            keyPassword = keystoreProperties["keyPassword"]
            storeFile = keystoreProperties["storeFile"] ? file(keystoreProperties["storeFile"]) : null
            storePassword = keystoreProperties["storePassword"]
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    namespace 'com.craftech.soolmate'
}

flutter {
    source '../..'
}

dependencies {
    implementation 'androidx.window:window:1.1.0'
    implementation 'androidx.window:window-java:1.1.0'
    implementation platform('com.google.firebase:firebase-bom:33.10.0')
    implementation 'com.android.support:multidex:1.0.3'
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.1.5'
}

tasks.withType(JavaCompile).configureEach {
    options.compilerArgs += ["-Xlint:unchecked", "-Xlint:deprecation"]
}


// import java.util.Properties
// import java.io.FileInputStream

// plugins {
//     id "com.android.application"
//     id "kotlin-android"
//     id "dev.flutter.flutter-gradle-plugin"
//     id "com.google.gms.google-services"
// }


// def localProperties = new Properties()
// def localPropertiesFile = rootProject.file('local.properties')
// if (localPropertiesFile.exists()) {
//     localPropertiesFile.withReader('UTF-8') { reader ->
//         localProperties.load(reader)
//     }
// }

// def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
// if (flutterVersionCode == null) {
//     flutterVersionCode = '1'
// }

// def flutterVersionName = localProperties.getProperty('flutter.versionName')
// if (flutterVersionName == null) {
//     flutterVersionName = '1.0'
// }

// def keystoreProperties = new Properties()
// def keystorePropertiesFile = rootProject.file("key.properties")
// if (keystorePropertiesFile.exists()) {
//     keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
// }

// android {
//     compileSdk 35

//     compileOptions {
//         coreLibraryDesugaringEnabled true
//     sourceCompatibility JavaVersion.VERSION_17
//     targetCompatibility JavaVersion.VERSION_17
//     }

//     kotlinOptions {
//         jvmTarget = '17'
//     }

//     sourceSets {
//         main.java.srcDirs += 'src/main/kotlin'
//     }

//     defaultConfig {
//         applicationId "com.craftech.soolmate"
//         minSdkVersion 24
//         targetSdkVersion 35
//         multiDexEnabled true
//         versionCode 8
//         versionName "1.8"
//         ndk {
//             abiFilters 'armeabi-v7a', 'arm64-v8a'
//         }
//     }

//      signingConfigs {
//         create("release") {
//             keyAlias = keystoreProperties["keyAlias"] as String
//             keyPassword = keystoreProperties["keyPassword"] as String
//             if (keystoreProperties["storeFile"]) {
//     storeFile = file(keystoreProperties["storeFile"])
// }
//             storePassword = keystoreProperties["storePassword"] as String
//         }
//     }
//     buildTypes {
//         release {
//             // TODO: Add your own signing config for the release build.
//             // Signing with the debug keys for now,
//             // so `flutter run --release` works.
//             signingConfig = signingConfigs.getByName("debug")
//             signingConfig = signingConfigs.getByName("release")
//         }
//     }

//     // buildTypes {
//     //     release {
//     //         minifyEnabled false
//     //         shrinkResources false
//     //         signingConfig signingConfigs.debug
//     //     }
//     // }

//     namespace 'com.craftech.soolmate'
// }

// flutter {
//     source '../..'
// }
// dependencies {
//     implementation 'androidx.window:window:1.1.0'
//     implementation 'androidx.window:window-java:1.1.0'
//     implementation platform('com.google.firebase:firebase-bom:33.10.0')
//     implementation 'com.android.support:multidex:1.0.3'
//     coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.1.5'
// }

// // Enable detailed Java compiler warnings
// tasks.withType(JavaCompile).configureEach {
//     options.compilerArgs += ["-Xlint:unchecked", "-Xlint:deprecation"]
// }
